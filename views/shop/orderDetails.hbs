<div class="container-fluid  pl-5 pr-5 pt-3" style="justify-content: center;">

    <nav style="--bs-breadcrumb-divider: url(&#34;data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8'%3E%3Cpath d='M2.5 0L1 1.5 3.5 4 1 6.5 2.5 8l4-4-4-4z' fill='currentColor'/%3E%3C/svg%3E&#34;);"
        aria-label="breadcrumb" class="pb-3">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page"><a href="/orders">Order</a></li>
            <li class="breadcrumb-item active" aria-current="page">Details</li>
        </ol>
    </nav>

    <div class="row mb-5">
        <div class="col-md-6 col-xl-4 mb-4 mb-xl-0">
            <div class="confirmation-card">
                <h3 class="billing-title"><span style="color: #777777">Order No.</span> {{order.orderNo}}</h3>
                <table class="order-rable">
                    <div id="orderDate" hidden>{{order.date}}</div>

                    <tr>
                        <td>Date</td>
                        <td id="modifiedDate"></td>

                    </tr>
                    <tr>
                        <td>Total</td>
                        <td >₹{{order.totalAmount}}</td>
                    </tr>
                    <tr>
                        <td>Payment</td>
                        <td>{{order.paymentMethod}}</td>
                    </tr>
                    <tr>
                        <td>Order Status</td>
                        {{#if (eq order.status 'cancelled') }}
                        <td style="color:red">Cancelled</td>
                        {{else if (eq order.status 'pending')}}
                        <td style="color:rgb(123, 173, 6)">Item on the way</td>
                        {{else if (eq order.status 'returned')}}
                        <td style="color:red">Returned</td>
                        {{else if (eq order.status 'return-pending')}}
                        <td style="color:rgb(239, 80, 7)">Return in process</td>
                        {{else}}
                        <td style="color:green">Delivered</td>
                        {{/if}}
                    </tr>
                </table>
            </div>
        </div>
        <div class="col-md-6 col-xl-4 mb-4 mb-xl-0">
            <div class="confirmation-card">
                <h3 class="billing-title">Billing Address</h3>
                <table class="order-rable">
                    <tr>
                        <td>House</td>
                        <td id="houseName">{{order.address.houseName}}</td>
                    </tr>
                    <tr>
                        <td>City</td>
                        <td id="city">{{order.address.city}}</td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>{{order.address.state}}</td>
                    </tr>
                    <tr>
                        <td>Postcode</td>
                        <td id="pincode">{{order.address.pincode}}</td>
                    </tr>
                    {{!-- hidden --}}
                    <input id="phone" type="hidden" value='{{order.address.phone}}'>
                    <input id="name" type="hidden" value='{{order.address.name}}'>
                    <input type="hidden" id="total" value='{{order.totalAmount}}'>
                    <input type="hidden" id="method" value="{{order.paymentMethod}}" >

                </table>
            </div>
        </div>
        <div class="col-md-6 col-xl-4 mb-4 mb-xl-0">
            <div class="confirmation-card">
                <h3 class="billing-title">Shipping Address</h3>
                <table class="order-rable">
                    <tr>
                        <td>House</td>
                        <td>{{order.address.houseName}}</td>
                    </tr>
                    <tr>
                        <td>City</td>
                        <td>{{order.address.city}}</td>
                    </tr>
                    <tr>
                        <td>State</td>
                        <td>{{order.address.state}}</td>
                    </tr>
                    <tr>
                        <td>Postcode</td>
                        <td>{{order.address.pincode}}</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>


    <table class="table table-success table-stdiped">
        <thead>
            <th>No.</th>
            <th>Product</th>
            <th>Amount</th>
            <th>Quantity</th>
            <th>Total</th>
        </thead>
        <tbody>
            {{#each order.items}}
            <tr>
                <td class="index"></td>
                <td class="productName">{{this.product.productName}}</td>
                <td>₹<span class="productPrice">{{this.product.productPrice}}</span></td>
                <td class="productQuantity">{{this.quantity}}</td>
                <td>₹<span class="productTotal">{{this.productTotal}}</span></td>
            </tr>
            {{/each}}
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>Subtotal:</td>
                <td>₹<span id="subtotal"></span></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>Shipping:</td>
                <td>₹50.00</td>
            </tr>
            {{#if order.discount}}
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td>Discount:</td>
                <td>(- {{order.discount}})</td>
            </tr>
            {{/if}}

            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td><b>Total:</b></td>
                <td>₹<b>{{order.totalAmount}}</b></td>
            </tr>

        </tbody>

    </table>
    
    <div class="pb-3">
        <td></td>
        <td></td>
        {{#if (eq order.status 'pending')}}
        <td><a style="color: white" class="btn btn-success" id="downloadButton" onclick="generatePDF('{{order}}')" data-key="{{order}}">Download
                Invoice</a></td>
        <td><a style="color: white" onclick="cancelOrder('{{order._id}}')" class="btn btn-danger">Cancel Order</a></td>
        {{else if (eq order.status 'delivered')}}
        <td><a style="color: white" class="btn btn-success" id="downloadButton" onclick="generatePDF('{{order}}')" data-key="{{order}}">Download
                Invoice</a></td>
        <td><a style="color: white" onclick="returnOrder('{{order._id}}')" class="btn btn-danger">Return Order</a></td>
        {{else if (eq order.status 'returned')}}
        <td>
            <p style="color: rgb(206, 48, 8); font-weight: bold;">The order has been returned</p>
        </td>
        {{else if (eq order.status 'return-pending')}}
        <td>
            <p style="color: rgb(206, 137, 8); font-weight: bold;">The order return in progress</p>
        </td>
        {{else if (eq order.status 'cancelled')}}
        <td>
            <p style="color: rgb(206, 34, 8); font-weight: bold;">The order has been cancelled</p>
        </td>
        <td><a style="color: rgb(8, 64, 206); font-weight: bold;" href="/products">Shop more</a></td>
        {{/if}}
        <td></td>

    </div>

</div>

{{!-- </section> --}}







{{!-- Script to add the serial No. --}}
<script>
    let index = document.getElementsByClassName('index');

    for (let i = 0; i < index.length; i++) {
        index[i].innerHTML = i + 1;
    }
</script>

<script>
    let subtotal = 0;
    let productTotal = document.getElementsByClassName('productTotal');

    for (let i = 0; i < productTotal.length; i++) {
        subtotal += +productTotal[i].innerHTML;
    }

    document.getElementById('subtotal').innerHTML = subtotal;
</script>

<script>
    let timestamp = document.getElementById('orderDate').innerText;
    const day = timestamp.substring(8, 10)
    const month = timestamp.substring(4, 7);
    const year = timestamp.substring(11, 15);
    const formattedDate = `${month} ${day}, ${year}`;

    document.getElementById('modifiedDate').innerHTML = formattedDate;

</script>



{{!-- cancel order scripts --}}
<script>
    function cancelOrder(orderId) {
        $.ajax({
            url: '/cancelOrder?orderId=' + orderId,
            method: 'POST',
            success: function (response) {
                window.location.href = '/order/details?orderId=' + orderId;
            }
        })
    }
</script>

{{!-- return order scripts --}}
<script>
    function returnOrder(orderId) {
        $.ajax({
            url: '/returnOrder?orderId=' + orderId,
            method: 'POST',
            success: function (response) {
                window.location.href = '/order/details?orderId=' + orderId;
            }
        })
    }
</script>



{{!-- for PDF --}}
<script>
    



</script>


{{!-- Download PDF --}}
<script src="https://unpkg.com/jspdf-invoice-template@1.4.0/dist/index.js"></script>

<script>

    



    function generatePDF(orderDetails) {
        //let order = JSON.parse(orderDetails);
        //console.log(order)

    const customerName = document.getElementById('name').value;
    const phone = document.getElementById('phone').value;
    const total = document.getElementById('total').value;
    const method = document.getElementById('method').value;
    const houseName = document.getElementById('houseName').innerText;
    const city = document.getElementById('city').innerText;
    const pincode = document.getElementById('pincode').innerText;


    const productName = document.getElementsByClassName('productName');
    const productPrice = document.getElementsByClassName('productPrice');
    const productQuantity = document.getElementsByClassName('productQuantity');
    const productTotal = document.getElementsByClassName('productTotal');

    const products = [];
    for(let i=0; i<productName.length; i++) {
        products.push({
            productName : productName[i].innerHTML,
            productPrice : productPrice[i].innerHTML,
            productQuantity : productQuantity[i].innerHTML,
            productTotal : productTotal[i].innerHTML
        })
    }





    

    var props = {
        outputType: jsPDFInvoiceTemplate.OutputType.Save,
        returnJsPDFDocObject: true,
        fileName: "Invoice 2021",
        orientationLandscape: false,
        compress: true,
        logo: {
            src: "/img/logo/Screenshot_2023-04-02_082650-removebg-preview.png",
            type: 'PNG', //optional, when src= data:uri (nodejs case)
            width: 53.33, //aspect ratio = width/height
            height: 26.66,
            margin: {
                top: 0, //negative or positive num, from the current position
                left: 0 //negative or positive num, from the current position
            }
        },
        stamp: {
            inAllPages: true, //by default = false, just in the last page
            src: "https://raw.githubusercontent.com/edisonneza/jspdf-invoice-template/demo/images/qr_code.jpg",
            type: 'JPG', //optional, when src= data:uri (nodejs case)
            width: 20, //aspect ratio = width/height
            height: 20,
            margin: {
                top: 0, //negative or positive num, from the current position
                left: 0 //negative or positive num, from the current position
            }
        },
        business: {
            name: "TRENDLY",
            address: "Albania, Tirane ish-Dogana, Durres 2001",
            phone: "(+1) 232 425 26",
            email: "trendly.fashion@gmail.com",
            email_1: "info.trendly@example.al",
            website: "www.trendly.shop",
        },
        contact: {
            label: "Invoice issued for:",
            name: customerName,
            address: `${houseName}, ${city} ${pincode}`,
            phone: `(+91) ${phone}`,
        },
        invoice: {
            label: "Invoice: #",
            num: 19,
            invDate: "Payment Date:"+ formattedDate,
            invGenDate: "Invoice Date: "+formattedDate,
            headerBorder: false,
            tableBodyBorder: false,
            header: [
                {
                    title: "#",
                    style: {
                        width: 10
                    }
                },
                {
                    title: "Product",
                    style: {
                        width: 30
                    }
                },
                { title: "Price" },
                { title: "Quantity" },
                { title: "Total" }
            ],
            table: Array.from(Array(products.length), (item, index) => ([
                index + 1,
                products[index].productName,
                products[index].productPrice,
                products[index].productQuantity,
                products[index].productTotal,
                
            ])),
            additionalRows: [{
                col1: 'Total:',
                col2: '145,250.50',
                col3: 'ALL',
                style: {
                    fontSize: 14 //optional, default 12
                }
            },
            {
                col1: 'VAT:',
                col2: '20',
                col3: '%',
                style: {
                    fontSize: 10 //optional, default 12
                }
            },
            {
                col1: 'SubTotal:',
                col2: '116,199.90',
                col3: 'ALL',
                style: {
                    fontSize: 10 //optional, default 12
                }
            }],
            invDescLabel: "Invoice Note",
            invDesc: "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary.",
        },
        footer: {
            text: "The invoice is created on a computer and is valid without the signature and stamp.",
        },
        pageEnable: true,
        pageLabel: "Page ",
    };

        var pdfObject = jsPDFInvoiceTemplate.default(props);

    }
</script>